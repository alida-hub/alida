<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>alida</artifactId>
  <version>3.1.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>alida</name>
  <description>Alida - Advanced Library for Integrated Development of Data Analysis Applications</description> 
  <url>https://www.informatik.uni-halle.de/alida</url>
  <inceptionYear>2010</inceptionYear>

  <parent>
    <groupId>de.unihalle.informatik.Alida</groupId>
    <artifactId>alida-pom</artifactId>
    <version>2.4-SNAPSHOT</version>
  </parent>
  
  <properties>
    <alida.xml.version>2.3-SNAPSHOT</alida.xml.version>
  </properties>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
	<dependencies>
	  <dependency>
	    <groupId>org.apache.maven.shared</groupId>
	    <artifactId>maven-filtering</artifactId>
	    <version>${maven.plugin.filtering.version}</version>
	  </dependency>
	</dependencies>
        <executions>
          <!-- files needed for execution -->
          <execution>
            <id>copy-resources-for-execution</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
	      <delimiters>
	        <delimiter>${*}</delimiter> <!-- to keep the default behavior --> 
	        <delimiter>@*@</delimiter>  <!-- to add Ant-like tokens style --> 
	      </delimiters>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
	          <directory>src/main/resources</directory>
	          <includes>
                    <include>revision.txt</include>
                    <include>LICENSE_alida.txt</include>
	          </includes>
	          <filtering>true</filtering>
                  </resource>
                <resource>
	           <directory>src/main/resources</directory>
	           <excludes>
                     <exclude>revision.txt</exclude>
	           </excludes>
	           <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- files needed to package -->
          <execution>
            <id>copy-resources-for-packaging</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
	      <delimiters>
	        <delimiter>${*}</delimiter> <!-- to keep the default behavior --> 
	        <delimiter>@*@</delimiter>  <!-- to add Ant-like tokens style --> 
	      </delimiters>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
	          <directory>src/main/java</directory>
	          <filtering>true</filtering>
	          <includes>
                    <include>**/*.java</include>
	          </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- copy dependencies incl. help jar to local folder -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-dependency-plugin</artifactId>
      </plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
	<!-- run annotation processing -->
	<groupId>org.bsc.maven</groupId>
	<artifactId>maven-processor-plugin</artifactId>
      </plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-jar-plugin</artifactId>
      </plugin>
      
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-site-plugin</artifactId>
      </plugin>

      <plugin>
	<!-- package binaries and sources into zip files;
	     Attention: here we use our own assembly descriptors! -->
	<artifactId>maven-assembly-plugin</artifactId>
	<configuration>
	  <descriptors>
	    <descriptor>src/main/assembly/alida-bin.xml</descriptor>
	    <descriptor>src/main/assembly/alida-src.xml</descriptor>
	  </descriptors>
	</configuration>
	<executions>
	  <execution>
	    <id>assembly-distribution-Id</id>
	    <phase>package</phase>
	    <goals>
	      <goal>single</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-javadoc-plugin</artifactId>
      </plugin>

      <!-- allow GUI operator runner for execution with Maven -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
	<configuration>
          <executable>java</executable>
	  <classpathScope>runtime</classpathScope>
          <arguments>
	    <argument>-classpath</argument>
            <classpath/>
	    <argument>-Xms2048m</argument>
	    <argument>-Xmx2048m</argument>
	    <argument>-Dalida.oprunner.level=standard</argument>
	    <argument>-Dalida.versionprovider_class=de.unihalle.informatik.Alida.version.ALDVersionProviderReleaseJar</argument>
            <argument>de.unihalle.informatik.Alida.tools.ALDOpRunnerGUI</argument>
          </arguments>
        </configuration>
      </plugin>
    </plugins>

  </build>

  <repositories>
    <repository>
      <id>snapshots</id>
      <name>Archiva Public Snapshot Repository on 'moon'</name>
      <url>https://moon.informatik.uni-halle.de/repository/snapshots-pub/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>releases</id>
      <name>Archiva Release Repository on 'moon'</name>
      <url>https://moon.informatik.uni-halle.de/repository/releases/</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <dependencies>
    <!-- Compile dependencies -->
    <dependency>
      <groupId>net.java.sezpoz</groupId>
      <artifactId>sezpoz</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>net.sf</groupId>
      <artifactId>jargs</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.github.vlsi.mxgraph</groupId>
      <artifactId>jgraphx</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jgit</groupId>
      <artifactId>org.eclipse.jgit</artifactId>
    </dependency>
    <dependency>
      <groupId>de.unihalle.informatik.Alida</groupId>
      <artifactId>alida-xml</artifactId>
      <version>${alida.xml.version}</version>
    </dependency>
    <dependency> 
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <!-- Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <scm>
    <connection>scm:git:https://github.com/alida-hub/alida.git</connection>
    <developerConnection>scm:git:https://github.com/alida-hub/alida.git</developerConnection>
  </scm>

  <issueManagement>
    <system>Github Issue Tracking</system>
    <url>https://github.com/alida-hub/alida/issues</url>
  </issueManagement>

</project>
